{"ast":null,"code":"import { CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, CREATE_ORDER_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, // ORDER_PAY_RESET,\nORDER_PAY_REQUEST_CASH, ORDER_PAY_SUCCESS_CASH, ORDER_PAY_FAIL_CASH, // ORDER_PAY_RESET_CASH,\nORDER_PAY_REQUEST_Gpay, ORDER_PAY_SUCCESS_Gpay, // ORDER_PAY_RESET_Gpay,\nORDER_PAY_FAIL_Gpay, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_REQUEST, ORDER_LIST_REQUEST, ORDER_LIST_FAIL, ORDER_LIST_SUCCESS, ORDER_LIST_RESET, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL } from '../contants/orderConstants';\nimport axios from 'axios';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CREATE_ORDER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/orders', order, config);\n    dispatch({\n      type: CREATE_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${orderId}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    console.log('1');\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrderByGpay = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST_Gpay\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    console.log('1');\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/Gpay`, paymentResult, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS_Gpay,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL_Gpay,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrderByCash = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    // dispatch({ ORDER_PAY_RESET_CASH })\n    dispatch({\n      type: ORDER_PAY_REQUEST_CASH\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/cash`, paymentResult, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS_CASH,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL_CASH,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deliverOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    console.log(order);\n    const {\n      data\n    } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; //we dont need content type for get requests","map":{"version":3,"sources":["C:/Users/sagar/Desktop/extras/new Proshop git cloned/Proshop/frontend/src/actions/orderAction.js"],"names":["CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST_CASH","ORDER_PAY_SUCCESS_CASH","ORDER_PAY_FAIL_CASH","ORDER_PAY_REQUEST_Gpay","ORDER_PAY_SUCCESS_Gpay","ORDER_PAY_FAIL_Gpay","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_REQUEST","ORDER_LIST_REQUEST","ORDER_LIST_FAIL","ORDER_LIST_SUCCESS","ORDER_LIST_RESET","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","axios","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","orderId","get","payOrder","paymentResult","console","log","put","payOrderByGpay","payOrderByCash","listMyOrders","listOrders","deliverOrder","_id"],"mappings":"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","sourcesContent":["import {\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_SUCCESS,\r\n  CREATE_ORDER_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  // ORDER_PAY_RESET,\r\n  ORDER_PAY_REQUEST_CASH,\r\n  ORDER_PAY_SUCCESS_CASH,\r\n  ORDER_PAY_FAIL_CASH,\r\n  // ORDER_PAY_RESET_CASH,\r\n  ORDER_PAY_REQUEST_Gpay,\r\n  ORDER_PAY_SUCCESS_Gpay,\r\n  // ORDER_PAY_RESET_Gpay,\r\n  ORDER_PAY_FAIL_Gpay,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_RESET,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n} from '../contants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: CREATE_ORDER_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post('/api/orders', order, config)\r\n    dispatch({ type: CREATE_ORDER_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CREATE_ORDER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (orderId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    const { data } = await axios.get(`/api/orders/${orderId}`, config)\r\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const payOrder =\r\n  (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ORDER_PAY_REQUEST })\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n      console.log('1')\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      const { data } = await axios.put(\r\n        `/api/orders/${orderId}/pay`,\r\n        paymentResult,\r\n        config\r\n      )\r\n      dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\r\n      dispatch({ type: ORDER_PAY_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_PAY_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\nexport const payOrderByGpay =\r\n  (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ORDER_PAY_REQUEST_Gpay })\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n      console.log('1')\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      const { data } = await axios.put(\r\n        `/api/orders/${orderId}/Gpay`,\r\n        paymentResult,\r\n        config\r\n      )\r\n      dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\r\n      dispatch({ type: ORDER_PAY_SUCCESS_Gpay, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_PAY_FAIL_Gpay,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\nexport const payOrderByCash =\r\n  (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      // dispatch({ ORDER_PAY_RESET_CASH })\r\n      dispatch({ type: ORDER_PAY_REQUEST_CASH })\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n      const { data } = await axios.put(\r\n        `/api/orders/${orderId}/cash`,\r\n        paymentResult,\r\n        config\r\n      )\r\n      dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\r\n      dispatch({ type: ORDER_PAY_SUCCESS_CASH, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_PAY_FAIL_CASH,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_LIST_MY_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({ type: ORDER_LIST_MY_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_LIST_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    const { data } = await axios.get(`/api/orders/`, config)\r\n\r\n    dispatch({ type: ORDER_LIST_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DELIVER_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n    console.log(order)\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    )\r\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\r\n    dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n//we dont need content type for get requests\r\n"]},"metadata":{},"sourceType":"module"}