{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sagar\\\\Desktop\\\\extras\\\\new Proshop git cloned\\\\Proshop\\\\frontend\\\\src\\\\Screens\\\\OrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { ListGroup, Col, Row, Card, Image, Button } from 'react-bootstrap'; // import axios from 'axios'\n// import { PayPalButton } from 'react-paypal-button-v2'\n\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getOrderDetails, // payOrder,\ndeliverOrder, payOrderByCash, payOrderByGpay } from '../actions/orderAction';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET, ORDER_PAY_RESET_CASH } from '../contants/orderConstants';\nimport GooglePayButton from '@google-pay/button-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrderScreen = _ref => {\n  _s();\n\n  let {\n    match,\n    history\n  } = _ref;\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n  const [sdkReady, setSdkReady] = useState(false);\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    loading,\n    error\n  } = orderDetails;\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: loadingPay,\n    success: successPay\n  } = orderPay;\n  const orderDeliver = useSelector(state => state.orderDeliver);\n  const {\n    loading: loadingDeliver,\n    success: successDeliver\n  } = orderDeliver; // console.log(loadingPay, successPay)\n  // const orderPayByCash = useSelector((state) => state.orderPayByCash)\n  // const { loading: loadingP, success: successP } = orderPayByCash\n  // console.log(loadingP, successP)\n  // const orderPayByGpay = useSelector((state) => state.orderPayByGpay)\n  // const { loading: loadingPa, success: successPa } = orderPayByGpay\n  // console.log(loadingPa, successPa)\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin; // const orderDeliver = useSelector((state) => state.orderDeliver)\n  // const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } // const addPayPalScript = async () => {\n    //   const { data: clientId } = await axios.get('/api/config/paypal')\n    //   const script = document.createElement('script')\n    //   script.type = 'text/javascript'\n    //   script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n    //   script.async = true\n    //   script.onload = () => {\n    //     setSdkReady(true)\n    //   }\n    //   document.body.appendChild(script)\n    // }\n\n\n    const addGoogleScript = async () => {\n      // const google = window.google\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `https://pay.google.com/gp/p/js/pay.js`;\n      script.async = true;\n\n      script.onload = () => {\n        setSdkReady(true);\n      }; // const paymentsClient = new google.payments.api.PaymentsClient({\n      //   environment: 'TEST',\n      // })\n\n\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay || successDeliver || order._id !== orderId) {\n      dispatch({\n        type: ORDER_DELIVER_RESET\n      });\n      dispatch({\n        type: ORDER_PAY_RESET\n      });\n      dispatch({\n        type: ORDER_PAY_RESET_CASH\n      });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.google) {\n        // addPayPalScript()\n        addGoogleScript();\n      } else {\n        setSdkReady(false);\n      }\n    }\n  }, [dispatch, orderId, order, successPay, history, userInfo, successDeliver]);\n\n  if (!loading) {\n    order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0);\n    order.taxRounded = Number((Math.ceil(order.taxPrice) - order.taxPrice).toFixed(2));\n  } // const successPaymentHandler = (paymentResult) => {\n  //   // console.log('hielloe')\n  //   // console.log(paymentResult)\n  //   dispatch(payOrder(orderId, paymentResult))\n  // }\n\n\n  const handlePaymentByGpay = paymentResult => {\n    // console.log(paymentResult)\n    dispatch(payOrderByGpay(orderId, paymentResult));\n  };\n\n  const deliverSuccessHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  const handleCashRequest = () => {\n    // console.log('order', order)\n    var today = new Date();\n    var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    var time = today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n    var tim = date + ',' + time; // console.log('userInfo',userInfo)\n\n    const paymentResult = {\n      id: orderId,\n      status: 'paid',\n      update_time: tim,\n      email: userInfo.email\n    }; // console.log('Cash')\n    // console.log(paymentResult)\n\n    dispatch(payOrderByCash(orderId, paymentResult));\n  };\n\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"py-3\",\n      children: [\"Order \", order._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"my-4\",\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"SHIPPING\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Name:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 23\n                    }, this), \" \", order.user.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Email Id:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 23\n                    }, this), ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: `mailto:${order.user.email}`,\n                      children: [order.user.email, ' ']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Address: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 23\n                    }, this), order.shippingAddress.address, \",\", order.shippingAddress.city, \",\", order.shippingAddress.postalCode, \",\", order.shippingAddress.country]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 21\n                  }, this), order.isDelivered ? /*#__PURE__*/_jsxDEV(Message, {\n                    variant: \"success\",\n                    children: [\"Delivered on \", order.deliveredAt]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(Message, {\n                    variant: \"danger\",\n                    children: \"Not Delivered\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                variant: \"flush\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"PAYMENT METHOD\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Method:\\xA0\", order.paymentMethod]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 21\n                  }, this), order.isPaid ? /*#__PURE__*/_jsxDEV(Message, {\n                    variant: \"success\",\n                    children: [\"Paid on \", order.paidAt]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(Message, {\n                    variant: \"danger\",\n                    children: \"Not Paid\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"ORDER ITEMS\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 21\n                  }, this), order.orderItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n                    children: \"Your Cart is Empty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n                    variant: \"flush\",\n                    children: order.orderItems.map((item, index) => {\n                      return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                        children: /*#__PURE__*/_jsxDEV(Row, {\n                          children: [/*#__PURE__*/_jsxDEV(Col, {\n                            md: 2,\n                            children: /*#__PURE__*/_jsxDEV(Image, {\n                              src: item.image,\n                              alt: item.name,\n                              fluid: true,\n                              rounded: true\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 218,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 217,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            children: /*#__PURE__*/_jsxDEV(Link, {\n                              to: `/product/${item.product}`,\n                              children: item.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 227,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 226,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(Col, {\n                            children: [item.qty, \"x \", /*#__PURE__*/_jsxDEV(\"span\", {\n                              children: \"\\u20B9\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 232,\n                              columnNumber: 47\n                            }, this), \"\\xA0\", item.price, \"= \", /*#__PURE__*/_jsxDEV(\"span\", {\n                              children: \"\\u20B9\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 233,\n                              columnNumber: 49\n                            }, this), \"\\xA0\", item.qty * item.price]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 231,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 216,\n                          columnNumber: 31\n                        }, this)\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 29\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"my-4\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [' ', /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"ORDER SUMMARY\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Cart value\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"\\u20B9\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 23\n                    }, this), \"\\xA0\", order.itemsPrice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Shipping\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"\\u20B9\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 23\n                    }, this), \"\\xA0\", order.shippingPrice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Tax @18%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"\\u20B9\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 23\n                    }, this), \"\\xA0\", order.taxPrice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Rounding off \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"\\u20B9\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 23\n                    }, this), \"\\xA0\", order.taxRounded]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"Total Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"\\u20B9\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 23\n                    }, this), \"\\xA0\", order.totalPrice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this), !order.isPaid && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [loadingPay && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 36\n                }, this), !sdkReady ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"button\",\n                      variant: \"primary\",\n                      className: \"py-2\",\n                      onClick: handleCashRequest,\n                      children: [\"Pay by cash \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"\\u20B9\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 317,\n                        columnNumber: 41\n                      }, this), \"\\xA0\", order.totalPrice]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                    children: /*#__PURE__*/_jsxDEV(GooglePayButton, {\n                      environment: \"TEST\",\n                      paymentRequest: {\n                        apiVersion: 2,\n                        apiVersionMinor: 0,\n                        allowedPaymentMethods: [{\n                          type: 'CARD',\n                          parameters: {\n                            allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n                            allowedCardNetworks: ['MASTERCARD', 'VISA']\n                          },\n                          tokenizationSpecification: {\n                            type: 'PAYMENT_GATEWAY',\n                            parameters: {\n                              gateway: 'example',\n                              gatewayMerchantId: 'exampleGatewayMerchantId'\n                            }\n                          }\n                        }],\n                        merchantInfo: {\n                          merchantId: '12345678901234567890',\n                          merchantName: 'Demo Merchant'\n                        },\n                        transactionInfo: {\n                          totalPriceStatus: 'FINAL',\n                          totalPriceLabel: 'Total',\n                          totalPrice: String(order.totalPrice),\n                          currencyCode: 'INR',\n                          countryCode: 'IN'\n                        },\n                        shippingAddressRequired: true,\n                        callbackIntents: ['PAYMENT_AUTHORIZATION']\n                      },\n                      onLoadPaymentData: paymentRequest => {// console.log('success', paymentRequest)\n                      },\n                      onPaymentDataChange: paymentData => {\n                        // console.log(\n                        //   'on payment data changed',\n                        //   paymentData\n                        // )\n                        return {};\n                      },\n                      onPaymentAuthorized: paymentData => {\n                        // console.log(\n                        //   'payment Authorized success',\n                        //   paymentData\n                        // )\n                        handlePaymentByGpay(paymentData);\n                        return {\n                          transactionState: ' SUCCESS'\n                        };\n                      },\n                      existingPaymentMethodRequired: \"false\",\n                      buttonColor: \"black\",\n                      buttonType: \"pay\",\n                      buttonSizeMode: \"static\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: error && /*#__PURE__*/_jsxDEV(Message, {\n                  variant: \"danger\",\n                  children: error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), loadingDeliver && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 34\n            }, this), userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && /*#__PURE__*/_jsxDEV(ListGroup, {\n              children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  className: \"btn btn-block\",\n                  onClick: deliverSuccessHandler,\n                  children: \"Mark as Delivered\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrderScreen, \"9Ri5wr4VDIqhN0pg55540FHWbak=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["C:/Users/sagar/Desktop/extras/new Proshop git cloned/Proshop/frontend/src/Screens/OrderScreen.js"],"names":["React","ListGroup","Col","Row","Card","Image","Button","useEffect","useState","Link","useDispatch","useSelector","getOrderDetails","deliverOrder","payOrderByCash","payOrderByGpay","Message","Loader","ORDER_PAY_RESET","ORDER_DELIVER_RESET","ORDER_PAY_RESET_CASH","GooglePayButton","OrderScreen","match","history","orderId","params","id","dispatch","sdkReady","setSdkReady","orderDetails","state","order","loading","error","orderPay","loadingPay","success","successPay","orderDeliver","loadingDeliver","successDeliver","userLogin","userInfo","push","addGoogleScript","script","document","createElement","type","src","async","onload","body","appendChild","_id","isPaid","window","google","itemsPrice","orderItems","reduce","acc","item","price","qty","taxRounded","Number","Math","ceil","taxPrice","toFixed","handlePaymentByGpay","paymentResult","deliverSuccessHandler","handleCashRequest","today","Date","date","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","tim","status","update_time","email","user","name","shippingAddress","address","city","postalCode","country","isDelivered","deliveredAt","paymentMethod","paidAt","length","map","index","image","product","shippingPrice","totalPrice","apiVersion","apiVersionMinor","allowedPaymentMethods","parameters","allowedAuthMethods","allowedCardNetworks","tokenizationSpecification","gateway","gatewayMerchantId","merchantInfo","merchantId","merchantName","transactionInfo","totalPriceStatus","totalPriceLabel","String","currencyCode","countryCode","shippingAddressRequired","callbackIntents","paymentRequest","paymentData","transactionState","isAdmin"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { ListGroup, Col, Row, Card, Image, Button } from 'react-bootstrap'\r\n// import axios from 'axios'\r\n// import { PayPalButton } from 'react-paypal-button-v2'\r\nimport { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getOrderDetails,\r\n  // payOrder,\r\n  deliverOrder,\r\n  payOrderByCash,\r\n  payOrderByGpay,\r\n} from '../actions/orderAction'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_PAY_RESET_CASH,\r\n} from '../contants/orderConstants'\r\nimport GooglePayButton from '@google-pay/button-react'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n  const dispatch = useDispatch()\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n  // console.log(loadingPay, successPay)\r\n\r\n  // const orderPayByCash = useSelector((state) => state.orderPayByCash)\r\n  // const { loading: loadingP, success: successP } = orderPayByCash\r\n  // console.log(loadingP, successP)\r\n\r\n  // const orderPayByGpay = useSelector((state) => state.orderPayByGpay)\r\n  // const { loading: loadingPa, success: successPa } = orderPayByGpay\r\n  // console.log(loadingPa, successPa)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  // const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  // const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n    // const addPayPalScript = async () => {\r\n    //   const { data: clientId } = await axios.get('/api/config/paypal')\r\n    //   const script = document.createElement('script')\r\n    //   script.type = 'text/javascript'\r\n    //   script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n    //   script.async = true\r\n    //   script.onload = () => {\r\n    //     setSdkReady(true)\r\n    //   }\r\n    //   document.body.appendChild(script)\r\n    // }\r\n\r\n    const addGoogleScript = async () => {\r\n      // const google = window.google\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://pay.google.com/gp/p/js/pay.js`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      // const paymentsClient = new google.payments.api.PaymentsClient({\r\n      //   environment: 'TEST',\r\n      // })\r\n\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_PAY_RESET_CASH })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.google) {\r\n        // addPayPalScript()\r\n        addGoogleScript()\r\n      } else {\r\n        setSdkReady(false)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, order, successPay, history, userInfo, successDeliver])\r\n\r\n  if (!loading) {\r\n    order.itemsPrice = order.orderItems.reduce(\r\n      (acc, item) => acc + item.price * item.qty,\r\n      0\r\n    )\r\n\r\n    order.taxRounded = Number(\r\n      (Math.ceil(order.taxPrice) - order.taxPrice).toFixed(2)\r\n    )\r\n  }\r\n\r\n  // const successPaymentHandler = (paymentResult) => {\r\n  //   // console.log('hielloe')\r\n  //   // console.log(paymentResult)\r\n  //   dispatch(payOrder(orderId, paymentResult))\r\n  // }\r\n\r\n  const handlePaymentByGpay = (paymentResult) => {\r\n    // console.log(paymentResult)\r\n    dispatch(payOrderByGpay(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverSuccessHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n  const handleCashRequest = () => {\r\n    // console.log('order', order)\r\n\r\n    var today = new Date()\r\n    var date =\r\n      today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate()\r\n    var time =\r\n      today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds()\r\n    var tim = date + ',' + time\r\n    // console.log('userInfo',userInfo)\r\n    const paymentResult = {\r\n      id: orderId,\r\n      status: 'paid',\r\n      update_time: tim,\r\n      email: userInfo.email,\r\n    }\r\n    // console.log('Cash')\r\n    // console.log(paymentResult)\r\n    dispatch(payOrderByCash(orderId, paymentResult))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1 className='py-3'>Order {order._id}</h1>\r\n      <div>\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        <Row>\r\n          <Col md={8}>\r\n            <Card className='my-4'>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <>\r\n                    <h3>\r\n                      <strong>SHIPPING</strong>\r\n                    </h3>\r\n                    <p>\r\n                      {' '}\r\n                      <strong>Name:</strong> {order.user.name}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Email Id:</strong>{' '}\r\n                      <a href={`mailto:${order.user.email}`}>\r\n                        {order.user.email}{' '}\r\n                      </a>\r\n                    </p>\r\n                    <p>\r\n                      <strong>Address: </strong>\r\n                      {order.shippingAddress.address},\r\n                      {order.shippingAddress.city},\r\n                      {order.shippingAddress.postalCode},\r\n                      {order.shippingAddress.country}\r\n                    </p>\r\n                    {order.isDelivered ? (\r\n                      <Message variant='success'>\r\n                        Delivered on {order.deliveredAt}\r\n                      </Message>\r\n                    ) : (\r\n                      <Message variant='danger'>Not Delivered</Message>\r\n                    )}\r\n                  </>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item variant='flush'>\r\n                  <div>\r\n                    <h3>PAYMENT METHOD</h3>\r\n                    <p>Method:&nbsp;{order.paymentMethod}</p>\r\n                    {order.isPaid ? (\r\n                      <Message variant='success'>\r\n                        Paid on {order.paidAt}\r\n                      </Message>\r\n                    ) : (\r\n                      <Message variant='danger'>Not Paid</Message>\r\n                    )}\r\n                  </div>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <div>\r\n                    <h3>ORDER ITEMS</h3>\r\n                    {order.orderItems.length === 0 ? (\r\n                      <Message>Your Cart is Empty</Message>\r\n                    ) : (\r\n                      <ListGroup variant='flush'>\r\n                        {order.orderItems.map((item, index) => {\r\n                          return (\r\n                            <ListGroup.Item key={index}>\r\n                              <Row>\r\n                                <Col md={2}>\r\n                                  <Image\r\n                                    src={item.image}\r\n                                    alt={item.name}\r\n                                    fluid\r\n                                    rounded\r\n                                  ></Image>\r\n                                </Col>\r\n\r\n                                <Col>\r\n                                  <Link to={`/product/${item.product}`}>\r\n                                    {item.name}\r\n                                  </Link>\r\n                                </Col>\r\n                                <Col>\r\n                                  {item.qty}x <span>&#8377;</span>&nbsp;\r\n                                  {item.price}= <span>&#8377;</span>&nbsp;\r\n                                  {item.qty * item.price}\r\n                                </Col>\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n                          )\r\n                        })}\r\n                      </ListGroup>\r\n                    )}\r\n                  </div>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col md={4}>\r\n            <Card className='my-4'>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    {' '}\r\n                    <h3>ORDER SUMMARY</h3>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Cart value</Col>\r\n                    <Col>\r\n                      <span>&#8377;</span>&nbsp;{order.itemsPrice}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Shipping</Col>\r\n                    <Col>\r\n                      <span>&#8377;</span>&nbsp;{order.shippingPrice}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Tax @18%</Col>\r\n                    <Col>\r\n                      <span>&#8377;</span>&nbsp;{order.taxPrice}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Rounding off </Col>\r\n                    <Col>\r\n                      <span>&#8377;</span>&nbsp;{order.taxRounded}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Total Price</Col>\r\n                    <Col>\r\n                      <span>&#8377;</span>&nbsp;{order.totalPrice}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                {!order.isPaid && (\r\n                  <ListGroup.Item>\r\n                    {loadingPay && <Loader />}\r\n                    {!sdkReady ? (\r\n                      <Loader />\r\n                    ) : (\r\n                      <span>\r\n                        {/* <PayPalButton\r\n                          amount={order.totalPrice}\r\n                          intent='order'\r\n                          onSucess={successPaymentHandler}\r\n                        ></PayPalButton> */}\r\n                        <ListGroup.Item>\r\n                          <Button\r\n                            type='button'\r\n                            variant='primary'\r\n                            className='py-2'\r\n                            onClick={handleCashRequest}\r\n                          >\r\n                            Pay by cash <span>&#8377;</span>&nbsp;\r\n                            {order.totalPrice}\r\n                          </Button>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                          <GooglePayButton\r\n                            environment='TEST'\r\n                            paymentRequest={{\r\n                              apiVersion: 2,\r\n                              apiVersionMinor: 0,\r\n                              allowedPaymentMethods: [\r\n                                {\r\n                                  type: 'CARD',\r\n                                  parameters: {\r\n                                    allowedAuthMethods: [\r\n                                      'PAN_ONLY',\r\n                                      'CRYPTOGRAM_3DS',\r\n                                    ],\r\n                                    allowedCardNetworks: ['MASTERCARD', 'VISA'],\r\n                                  },\r\n                                  tokenizationSpecification: {\r\n                                    type: 'PAYMENT_GATEWAY',\r\n                                    parameters: {\r\n                                      gateway: 'example',\r\n                                      gatewayMerchantId:\r\n                                        'exampleGatewayMerchantId',\r\n                                    },\r\n                                  },\r\n                                },\r\n                              ],\r\n                              merchantInfo: {\r\n                                merchantId: '12345678901234567890',\r\n                                merchantName: 'Demo Merchant',\r\n                              },\r\n                              transactionInfo: {\r\n                                totalPriceStatus: 'FINAL',\r\n                                totalPriceLabel: 'Total',\r\n                                totalPrice: String(order.totalPrice),\r\n                                currencyCode: 'INR',\r\n                                countryCode: 'IN',\r\n                              },\r\n                              shippingAddressRequired: true,\r\n                              callbackIntents: ['PAYMENT_AUTHORIZATION'],\r\n                            }}\r\n                            onLoadPaymentData={(paymentRequest) => {\r\n                              // console.log('success', paymentRequest)\r\n                            }}\r\n                            onPaymentDataChange={(paymentData) => {\r\n                              // console.log(\r\n                              //   'on payment data changed',\r\n                              //   paymentData\r\n                              // )\r\n                              return {}\r\n                            }}\r\n                            onPaymentAuthorized={(paymentData) => {\r\n                              // console.log(\r\n                              //   'payment Authorized success',\r\n                              //   paymentData\r\n                              // )\r\n                              handlePaymentByGpay(paymentData)\r\n\r\n                              return { transactionState: ' SUCCESS' }\r\n                            }}\r\n                            existingPaymentMethodRequired='false'\r\n                            buttonColor='black'\r\n                            buttonType='pay'\r\n                            buttonSizeMode='static'\r\n                          />\r\n                        </ListGroup.Item>\r\n                      </span>\r\n                    )}\r\n                  </ListGroup.Item>\r\n                )}\r\n\r\n                <ListGroup.Item>\r\n                  {error && <Message variant='danger'>{error}</Message>}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup>\r\n                    <ListGroup.Item>\r\n                      <Button\r\n                        type='button'\r\n                        className='btn btn-block'\r\n                        onClick={deliverSuccessHandler}\r\n                      >\r\n                        Mark as Delivered\r\n                      </Button>\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n"]},"metadata":{},"sourceType":"module"}