{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sagar\\\\Desktop\\\\extras\\\\new Proshop git cloned\\\\Proshop\\\\frontend\\\\src\\\\Screens\\\\OrderListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Table, Button, Row, Col } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listOrders } from '../actions/orderAction';\nimport { PRODUCT_CREATE_RESET } from '../contants/productConstant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrderListScreen = _ref => {\n  _s();\n\n  let {\n    history,\n    match\n  } = _ref;\n  const dispatch = useDispatch();\n  const orderList = useSelector(state => state.orderList);\n  const {\n    loading,\n    error,\n    orders\n  } = orderList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/login');\n    } else {\n      dispatch(listOrders());\n    }\n  }, [history, dispatch, userInfo]); //   console.log(users)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center py-3\",\n      children: \"ORDERS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      bordered: true,\n      striped: true,\n      responsive: true,\n      hover: true,\n      className: \"table-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"NAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"DATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"TOTAL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"PAID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"DELIVERED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders && orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.user && order.user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.createdAt.substring(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.totalPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.isPaid ? order.paidAt : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\",\n              style: {\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [' ', order.isDelivered ? order.deliveredAt : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\",\n              style: {\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n              to: `/order/${order._id}`,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"light\",\n                className: \"btn-sm\",\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this)]\n        }, order._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrderListScreen, \"T22Ya5guJBYtT2WBadWLHdx/0BQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = OrderListScreen;\nexport default OrderListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderListScreen\");","map":{"version":3,"sources":["C:/Users/sagar/Desktop/extras/new Proshop git cloned/Proshop/frontend/src/Screens/OrderListScreen.js"],"names":["React","useEffect","useSelector","useDispatch","Table","Button","Row","Col","LinkContainer","Message","Loader","listOrders","PRODUCT_CREATE_RESET","OrderListScreen","history","match","dispatch","orderList","state","loading","error","orders","userLogin","userInfo","isAdmin","push","map","order","_id","user","name","createdAt","substring","totalPrice","isPaid","paidAt","color","isDelivered","deliveredAt"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderAction'\r\nimport { PRODUCT_CREATE_RESET } from '../contants/productConstant'\r\n\r\nconst OrderListScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const orderList = useSelector((state) => state.orderList)\r\n  const { loading, error, orders } = orderList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login')\r\n    } else {\r\n      dispatch(listOrders())\r\n    }\r\n  }, [history, dispatch, userInfo])\r\n  //   console.log(users)\r\n\r\n  return (\r\n    <>\r\n      <h1 className='text-center py-3'>ORDERS</h1>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table bordered striped responsive hover className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <td>ID</td>\r\n              <td>NAME</td>\r\n              <td>DATE</td>\r\n              <td>TOTAL</td>\r\n              <td>PAID</td>\r\n              <td>DELIVERED</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders &&\r\n              orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.user && order.user.name}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {' '}\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                  {/* <td>{order.name}</td>\r\n                  <td>{order.price}</td>\r\n                  <td>{order.category}</td>\r\n                  <td>{product.brand}</td> */}\r\n                  <td></td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen\r\n"]},"metadata":{},"sourceType":"module"}