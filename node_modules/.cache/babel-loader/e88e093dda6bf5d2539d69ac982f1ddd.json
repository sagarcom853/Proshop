{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sagar\\\\Desktop\\\\extras\\\\new Proshop git cloned\\\\Proshop\\\\frontend\\\\src\\\\Screens\\\\registerScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport FormComponent from '../components/formComponent';\nimport { register } from '../actions/userAction';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterScreen = _ref => {\n  _s();\n\n  let {\n    location,\n    history\n  } = _ref;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setconfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userRegister; // console.log(loading, error, userInfo, message)\n\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, redirect, userInfo]);\n\n  const submitHandler = e => {\n    e.preventDefault(); // console.log('submit Handler')\n\n    let pattern = /^[A-z\\s]+$/;\n    let sampleEmail = /^[A-z0-9]+.@[A-z]+.[A-z]+$/; //Dispatch Register\n\n    if (password !== confirmPassword) {\n      setMessage('passwords do not match');\n    } else if (!pattern.test(name)) {\n      setMessage('name length should be more then 5 characters and only alphabets');\n    } else if (!sampleEmail.test(email)) {\n      setMessage('please enter correct email ID');\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormComponent, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center py-3\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          className: \"py-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Set your name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          className: \"py-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Set your Mail\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          className: \"py-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Set your Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          className: \"py-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"confirmPassword\",\n            placeholder: \"Confirm your Password\",\n            value: confirmPassword,\n            onChange: e => setconfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"dark\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"py-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"Already Registered?\", /*#__PURE__*/_jsxDEV(Link, {\n            to: redirect ? `/login?redirect=${redirect}` : '/login',\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterScreen, \"PABwf6xKumTMxapg3qZBP/c8L5w=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["C:/Users/sagar/Desktop/extras/new Proshop git cloned/Proshop/frontend/src/Screens/registerScreen.js"],"names":["React","useEffect","useState","Link","useSelector","useDispatch","Form","Button","Row","Col","FormComponent","register","Message","Loader","RegisterScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setconfirmPassword","message","setMessage","dispatch","userRegister","state","loading","error","userInfo","redirect","search","split","push","submitHandler","e","preventDefault","pattern","sampleEmail","test","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,QAAuC,iBAAvC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,cAAc,GAAG,QAA2B;AAAA;;AAAA,MAA1B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA0B;AAChD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqB,eAAD,EAAkBC,kBAAlB,IAAwCtB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACuB,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAMyB,QAAQ,GAAGtB,WAAW,EAA5B;AACA,QAAMuB,YAAY,GAAGxB,WAAW,CAAEyB,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAAhC;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA+BJ,YAArC,CATgD,CAUhD;;AACA,QAAMK,QAAQ,GAAGlB,QAAQ,CAACmB,MAAT,GAAkBnB,QAAQ,CAACmB,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAlB,GAAkD,GAAnE;AAEAlC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI+B,QAAJ,EAAc;AACZhB,MAAAA,OAAO,CAACoB,IAAR,CAAaH,QAAb;AACD;AACF,GAJQ,EAIN,CAACjB,OAAD,EAAUiB,QAAV,EAAoBD,QAApB,CAJM,CAAT;;AAMA,QAAMK,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF,GAD2B,CAE3B;;AACA,QAAIC,OAAO,GAAG,YAAd;AACA,QAAIC,WAAW,GAAG,4BAAlB,CAJ2B,CAK3B;;AACA,QAAIpB,QAAQ,KAAKE,eAAjB,EAAkC;AAChCG,MAAAA,UAAU,CAAC,wBAAD,CAAV;AACD,KAFD,MAEO,IAAI,CAACc,OAAO,CAACE,IAAR,CAAazB,IAAb,CAAL,EAAyB;AAC9BS,MAAAA,UAAU,CACR,iEADQ,CAAV;AAGD,KAJM,MAIA,IAAI,CAACe,WAAW,CAACC,IAAZ,CAAiBvB,KAAjB,CAAL,EAA8B;AACnCO,MAAAA,UAAU,CAAC,+BAAD,CAAV;AACD,KAFM,MAEA;AACLC,MAAAA,QAAQ,CAAChB,QAAQ,CAACM,IAAD,EAAOE,KAAP,EAAcE,QAAd,CAAT,CAAR;AACD;AACF,GAjBD;;AAkBA,sBACE;AAAA,2BACE,QAAC,aAAD;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGI,OAAO,iBAAI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAC,QAAjB;AAAA,kBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFd,EAGGM,KAAK,iBAAI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAC,QAAjB;AAAA,kBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,cAHZ,EAIGD,OAAO,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAJd,eAKE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEO,aAAhB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC,MAAvC;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,eAFd;AAGE,YAAA,KAAK,EAAEpB,IAHT;AAIE,YAAA,QAAQ,EAAGqB,CAAD,IAAOpB,OAAO,CAACoB,CAAC,CAACK,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,OAAtB;AAA8B,UAAA,SAAS,EAAC,MAAxC;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,WAAW,EAAC,eAFd;AAGE,YAAA,KAAK,EAAEzB,KAHT;AAIE,YAAA,QAAQ,EAAGmB,CAAD,IAAOlB,QAAQ,CAACkB,CAAC,CAACK,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAqBE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,UAAtB;AAAiC,UAAA,SAAS,EAAC,MAA3C;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,WAAW,EAAC,mBAFd;AAGE,YAAA,KAAK,EAAEvB,QAHT;AAIE,YAAA,QAAQ,EAAGiB,CAAD,IAAOhB,WAAW,CAACgB,CAAC,CAACK,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBF,eA+BE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,iBAAtB;AAAwC,UAAA,SAAS,EAAC,MAAlD;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,iBADP;AAEE,YAAA,WAAW,EAAC,uBAFd;AAGE,YAAA,KAAK,EAAErB,eAHT;AAIE,YAAA,QAAQ,EAAGe,CAAD,IAAOd,kBAAkB,CAACc,CAAC,CAACK,MAAF,CAASC,KAAV;AAJrC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BF,eAwCE;AAAA;AAAA;AAAA;AAAA,gBAxCF,eA0CE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1CF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAoDE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE,QAAC,GAAD;AAAA,yDAEE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAEX,QAAQ,GAAI,mBAAkBA,QAAS,EAA/B,GAAmC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiED,CAtGD;;GAAMnB,c;UAOaT,W,EACID,W;;;KARjBU,c;AAuGN,eAAeA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport FormComponent from '../components/formComponent'\r\nimport { register } from '../actions/userAction'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setconfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n  // console.log(loading, error, userInfo, message)\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, redirect, userInfo])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    // console.log('submit Handler')\r\n    let pattern = /^[A-z\\s]+$/\r\n    let sampleEmail = /^[A-z0-9]+.@[A-z]+.[A-z]+$/\r\n    //Dispatch Register\r\n    if (password !== confirmPassword) {\r\n      setMessage('passwords do not match')\r\n    } else if (!pattern.test(name)) {\r\n      setMessage(\r\n        'name length should be more then 5 characters and only alphabets'\r\n      )\r\n    } else if (!sampleEmail.test(email)) {\r\n      setMessage('please enter correct email ID')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <FormComponent>\r\n        <h1 className='text-center py-3'>Sign Up</h1>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name' className='py-2'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Set your name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email' className='py-2'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Set your Mail'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password' className='py-2'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Set your Password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='confirmPassword' className='py-2'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='confirmPassword'\r\n              placeholder='Confirm your Password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setconfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <br />\r\n\r\n          <Button type='submit' variant='dark'>\r\n            Register\r\n          </Button>\r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n          <Col>\r\n            Already Registered?\r\n            <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n              Login\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </FormComponent>\r\n    </div>\r\n  )\r\n}\r\nexport default RegisterScreen\r\n"]},"metadata":{},"sourceType":"module"}